import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id "java"
//    id 'io.github.slimjar' version '1.3.0'
}

// naming
version = '2.4.0-SNAPSHOT'
group = 'dev.spaceseries'
def packageGroup = group + '.spacechat'

repositories {
    mavenCentral()

    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }

    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases/' }

    maven { url 'https://repo.yakovliam.com/releases/' }
    maven { url 'https://repo.codemc.org/repository/maven-public/' }
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url 'https://repo.mattstudios.me/artifactory/public/' }
    maven { url 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url 'https://repo.minebench.de/' }

    maven { url 'https://jitpack.io' }
}

dependencies {
    //implementation slimjar("1.2.6")

    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    compileOnly group: 'org.jetbrains', name: 'annotations', version: '16.0.1'

    // spigot
    compileOnly 'org.spigotmc:spigot-api:1.17-R0.1-SNAPSHOT'

    // placeholderAPI
    compileOnly 'me.clip:placeholderapi:2.10.9'

    // bstats
    implementation "org.bstats:bstats-bukkit:2.2.1"

    // caffeine
    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.2'

    // adventure
    implementation("net.kyori:adventure-api:4.9.1") {
        exclude group: 'net.kyori', module: 'adventure-bom'
    }
    implementation("net.kyori:adventure-platform-bukkit:4.0.0") {
        exclude group: 'net.kyori', module: 'adventure-bom'
    }
    implementation("net.kyori:adventure-text-minimessage:4.1.0-SNAPSHOT") {
        exclude group: 'net.kyori', module: 'adventure-bom'
    }

    // triumph msg adventure
    implementation "me.mattstudios:triumph-msg-adventure:2.2.4-SNAPSHOT"

    // acf
    implementation "co.aikar:acf-bukkit:0.5.0-SNAPSHOT"

    // mysql
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    //slim group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'

    // jedis
    implementation 'redis.clients:jedis:3.6.3'

    // google
    compileOnly 'com.google.code.gson:gson:2.8.0'
    compileOnly 'com.google.guava:guava:21.0'

    // configurate
    implementation 'org.spongepowered:configurate-gson:4.1.1'

    // hikari
    implementation('com.zaxxer:HikariCP:5.0.0') {
        exclude group: 'org.slf4j'
    }

    // nbt api
    implementation 'de.tr7zw:item-nbt-api-plugin:2.8.0'

    // locale library
    implementation 'com.github.PikaMug:LocaleLib:2.2'
}

artifacts {
    archives shadowJar
}

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

shadowJar {
    minimize {
        exclude(dependency(group: 'com.github.ben-manes.caffeine', name: 'caffeine'))
    }
    archiveName("SpaceChat-${project.version}.jar")
/*}

slimJar {*/
    relocate 'dev.spaceseries.spaceapi', "${packageGroup}.lib.spaceapi"
    relocate 'org.bstats', "${packageGroup}.lib.bstats"
    relocate 'net.kyori', "${packageGroup}.lib.kyori"
    relocate 'com.github.benmanes.caffeine', "${packageGroup}.lib.caffeine"
    //relocate 'com.mysql', "${packageGroup}.lib.mysql"
    relocate 'me.mattstudios.msg', "${packageGroup}.lib.msg"
    relocate "co.aikar.commands", "${packageGroup}.lib.aikar.commands"
    relocate "co.aikar.locales", "${packageGroup}.lib.aikar.locales"
    relocate "redis.clients.jedis", "${packageGroup}.lib.jedis"
    relocate "com.zaxxer.hikari", "${packageGroup}.lib.hikari"
    relocate "org.spongepowered.configurate", "${packageGroup}.lib.configurate"
    relocate "io.leangen.geantyref", "${packageGroup}.lib.geantyref"
    //relocate "io.github.slimjar", "${packageGroup}.lib.slimjar"
    relocate "de.tr7zw", "${packageGroup}.lib.tr7zw"
    relocate "me.pikamug.localelib", "${packageGroup}.lib.localelib"
    relocate "google.protobuf", "${packageGroup}.lib.protobuf"
}

processResources {
    filter ReplaceTokens, tokens: [version: project.version]
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}